# To start a new site 

```bash
hugo new site <site_name>
```

# Add this to your config.toml:
```toml
[outputFormats.Reveal]
baseName = "index"
mediaType = "text/html"
isHTML = true
```


# Create content/_index.md:
```markdown
+++
outputs = ["Reveal"]
+++

# Slide 1

Hello world!
``` 

# ADD SLIDES
Separate them by --- surrounded by blank lines:
```markdown
# Slide 1

Hello world!

---

# Slide 2

Hello program!

```

# ADD SLIDES WITH OTHER FILES
Add slides to content/home/*.md

+++
weight = 10
+++

# Slide 3

---

# Slide 4


Tip: Use weight to specify the order that files should be considered.

Add slides from other files in content/{section}/*.md


Place configuration values in config.toml or a presentation‚Äôs front matter (_index.md).

Themes control the look and feel of your presentation. Set the theme param to any valid Reveal.js theme.
[params.reveal_hugo]
theme = "moon"


USE A CUSTOM THEME
To use a custom Reveal.js theme, place the CSS file in the static directory and set the custom_theme param.

[params.reveal_hugo]
custom_theme = "reveal-hugo/themes/robot-lung.css"


To use Hugo pipes to build a custom Reveal.js theme, place the source file (SCSS / PostCSS) in the assets directory and set the custom_theme_compile param.

[params.reveal_hugo]
custom_theme = "reveal-hugo/themes/custom-theme.scss"
custom_theme_compile = true

https://reveal-hugo.dzello.com/custom-theme-example/


BUNDLED THEMES
reveal-hugo comes with 2 extra Reveal.js themes:

Set snakecase versions of Reveal.js params, which will be camelized and passed to Reveal.initialize.

To change the syntax highlighting theme, set the highlight_theme to a valid highlight.js theme name.

[params.reveal_hugo]
highlight_theme = "zenburn"

EXTENDING THE LAYOUT
Use partials to add HTML to the page for one or all presentations at a time.

create 

reveal-hugo/head.htm
reveal-hugo/body.htm

and add custom css
<style>
.reveal section h1 {
  color: blue;
}
</style>
 

 Or custom js 
<script>
code_show=true; 
function code_toggle() {
 if (code_show){
 $('div.input').hide();
 } else {
 $('div.input').show();
 }
 code_show = !code_show
} 
$( document ).ready(code_toggle);
</script>

Add custom html elements to slide 

<form action="javascript:code_toggle()"><input type="submit" value="Click here to toggle on/off the raw code."></form>


EXTENDING THE LAYOUT (simpler ALTERNATIVE)
You can declare a custom CSS or javascript in your configuration.
and then just point hugo to them 
[reveal_hugo]
custom_css = "css/custom.css"
custom_js = "js/custom.js"

These files can be located in static/css, static/js folder

https://reveal-hugo.dzello.com/extending-layout-example/#



SHORTCODES


Hugo‚Äôs shortcodes are similar to functions or templates that extend what you can do with Markdown.

https://gohugo.io/content-management/shortcodes/

The fragment shortcode makes content appear incrementally.
{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} Two {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}

The frag shortcode is more terse than fragment. It accepts a c attribute.

{{< frag c="One" >}}
{{< frag c="Two" >}}
{{< frag c="Three" >}}

Both fragment and frag accept two additional parameters:

class: sets the class of the wrapping span element
index: controls the order in which sections will appear

SECTION
The section shortcode groups slides into a vertical display.

Put the shortcode around the slides you want to group together.

{{% section %}}

## Section slide 1

---

## Section slide 2

{{% /section %}}


SLIDE
Use this shortcode when you need to customize slide attributes like id, class, background color and transition.

Add the shortcode above the slide‚Äôs content, below the ---.

---

{{< slide class="hello" >}}

## Hello, world!

---

example 
---

{{< slide transition="zoom" transition-speed="fast" >}}

## Custom slide 1

---
---

{{< slide background-color="#FF4081" >}}

## Custom slide 2

---


---

{{< slide background-image="/images/alex-litvin-790876-unsplash.jpg" >}}

---

Tip: Setting a slide‚Äôs id attribute makes it easy to link to from other parts of the presentation.

---

{{< slide id="custom-slide" >}}

## Custom slide

[Try the link](#custom-slide)

slide attribute possibilities from the Reveal.js docs:

autoslide
state
background
background-color
background-image
background-size
background-position
background-repeat
background-video
background-video-loop
background-video-muted
background-interactive
background-iframe
background-transition
transition (can have different in and out transitions)
transition-speed
notes (can also use the note shortcode)
timing



SLIDE TEMPLATES
Store sets of common slide attributes in front matter variables and apply them to slides with the template attribute.



Create templates in config.toml, _index.md or the current page‚Äôs front matter. Put them under the templates key with a meaningful name:

[reveal_hugo.templates.hotpink]
class = "hotpink"
background = "#FF4081"


Apply the template using the template attribute of the slide shortcode:


{{< slide template="hotpink" >}}

# I'm a hot pink slide!


If a template exists in multiple configurations, it‚Äôs properties will be merged. If a property is declared multiple times, the order of precedence is:

page
section (_index.md)
site (config.toml)


REUSABLE SLIDES
Store markdown in a data template and reuse it in multiple sections or presentations.

Add a example key to data/home.toml:

example = "I'm a slide"

Set the content attribute to ‚Äúhome.example‚Äù:

{{< slide content="home.example" >}}

Each data template entry can contain one or more slides, separated by --- with newlines.

SLIDE-SPECIFIC CSS
Add more variety to your presentation by applying slide-specific CSS.

First, use the slide shortcode to give the slide a class:


---

{{< slide class="side-by-side" >}}

# üìà

# üìä

---

Next, use a layout extension partial like reveal-hugo/head.html to add CSS selectors:


<style>
.reveal section.side-by-side h1 {
  position: absolute;
}
.reveal section.side-by-side h1:first-of-type {
  left: 25%;
}
.reveal section.side-by-side h1:nth-of-type(2) {
  right: 25%;
}
</style>









---


